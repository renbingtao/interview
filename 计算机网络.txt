
========================基础概念========================
将网络互相连接起来需要使用一些中间设备
物理层使用的叫做转发器
数据链路层使用的叫做网桥或桥接器
网络层使用的叫做路由器
网络层及以上使用的叫做网关

使用转发器或网桥，仅仅是把网络扩大了，但仍是一个网络，所以不能称为网络互连
我们讨论网络互联时，都是指用路由器进行网络互联和路由选择。由于历史原因，很多文献也把路由器成为网关
互联的计算机网络都是相同的IP协议，连接成逻辑互联网络（即互联的各种物理网络的异构性是客观存在的，但使用IP协议可以让它们看起来是一个统一的网络）

========================数据链路层========================
数据链路层使用的信道有两种类型：点对点信道、广播信道
以下面为例，H代表主机，R代表路由器
H1->R1->R2->R3->H2
主机有完整的5层协议栈，路由器只有3层（物理、数据链路、网络）。数据进入路由器后要从物理层上升到网络层，在转发表中找到下一跳的地址后，再下到物理层转发出去。因此，数据从主机H1传送到H2需要在路径中的各节点的协议栈向上和向下流动多次。

链路：一个节点到相邻节点的一段物理线路（有线或无线），中间没有其他的交换节点
数据链路：在一条线路传送数据时，除了物理线路，还需要通信协议来控制数据的传输。把这些实现协议的软硬件加到链路上，就构成了数据链路。现在最常用的方法是使用网络适配器来实现协议

帧
点对点信道的数据链路层的协议数据单元，网络层的单元是IP数据报
以结点A发送数据到结点B为例，通信的主要步骤如下
1.A的数据链路层收到网络层的IP数据报，添加首部和尾部组装成帧
2.A把封装好的帧发送给B
3.若B的数据链路层收到的帧无差错，则从帧中提取出IP数据报上交给网络层，否则丢弃这个帧

数据链路层协议的三个基本问题
封装成帧、透明传输、差错检测

封装成帧
即在一段数据的前后添加首部和尾部。一个帧的帧长等于帧的【数据部分】长度+帧首部和尾部的长度。首尾部的一个重要作用是进行帧定界（确认帧的界限）。每种数据链路层协议都规定了所能传送的帧的数据部分的上限-最大传送单元MTU。
当数据是由可打印的ASCII码（一共128个码，95个可打印，33个不可打印）组成的文本文件时，帧定界可以用特殊的帧定界符。控制字符为SOH（start of header，表示首部的开始，二进制为00000001）和EOT（end of transmission，表示帧的结束，二进制为00000100）。
当发送端发送帧时出现故障，又恢复，重新发送。由于只有SOH而EOT，接收端知道前一个数据时不完整的，舍弃；后面收到的帧有SOH和EOT，完整，收下

透明传输
数据部分不能包含SOH和EOT。通过键盘输入字符时不会输入控制字符，这种就叫透明传输
若数据部分是非ACSII码的文本文件（比如二进制代码的程序或图像），可能包含SOH和EOT，导致数据链路层找到错误的帧边界
所谓透明，表示无论什么样的数据，都能按照原样进行传输，数据看不见数据链路层有什么妨碍传输的东西，或者说数据链路层对数据是透明的
为了让数据部分的SOH和EOT不被错误解释，数据链路层在SOH和EOT前插入转义字符ESC（二进制00011011），接收端先删除转义符，再发给网络层。若转义字符也在数据中，则在转义字符前也插入转义字符

差错检测
比特在传输过程中，1可能变成0，0也可能变成1，这种叫做比特差错。目前广泛使用循环冗余检验CRC的检错技术
举例，要传送的数据M为101001（长度k=6），双方约定一个数P，比如1101（长度为3+1，n=3），则用101001000（M后面添加n个0）除以P，得到余数001，发送101001001（M+余数，共k+n）。接收端把收到的数据除以P，得到余数R，若R=0则无差错；否则有差错，舍弃（数据有差错且R=0的情况概率极小）。这种为了检错而添加的冗余码称为FCS，CRC是检测方法，而FCS是在后面添加的冗余码，两者不是同一概念
CRC仅能做到帧的无差错接收，但无法做到可靠传输（数据链路层的发送端发什么，接收端就收什么）。比如帧丢失，帧重复，帧失序，属于传输差错，而非比特差错

点对点协议
也叫PPP，point-to-point protocal。PPP帧的首部包含4个字段，尾部包含2个字段
标志字段        F       A       C       协议      信息部分        FCS    F
字符            7E      FF      03                                      7E
字节长度        1       1       1       2         不超过1500      2      1
第一和最后的字段为0x7E，0x表示后面的字符为16进制，表示帧的开始或结束。FF和03是当初预留的字段的值，但至今也没有其他定义，因此实际上是无效信息
协议字段为0x0021时，表示IP数据报；0xC021表示链路控制协议LCP的数据；0x8021表示网络层的控制数据
当信息部分出现0x7E时，进行转义

MAC
48位的全球地址，局域网上的每一台计算机中固化在适配器的ROM中的地址。若主机或路由器有多个适配器，则有多个地址

========================网络层========================
与IP协议配套使用的有三个协议：ARP，ICMP，IGMP，关系如下
ICMP,IGMP
IP
ARP
ARP在最下是因为IP需要使用这个协议，ICMP\IGMP在上是因为它们要使用IP协议

源主机H1要把IP数据报发送给H2
H1->R1->R2->R3->R4->R5->H2
H1查找自己的路由表，看目的主机是否在本网络上，若是，则直接交付；不是则转发给路由器（R1），R1查找自己的路由表后，转发给R2进行间接交付，一直转发到R5，由于R5和H2是连接在同一个网络上，因此直接交付给目的主机

IP地址及表示方法
IP地址的编址方法经过了三个历史阶段：分类的IP地址；子网的划分；构成超网
所谓分类，即将IP地址分为若干固定类，这里的A,B,C类地址都由两个固定长度的字段组成，第一个字段是网络号，在整个互联网范围内必须是唯一的；第二个字段是主机号，标识该主机或路由器，一个主机号在一个网络号范围内必须唯一，因此IP在整个互联网也是唯一的

A类地址
0|网络号|主机号
8位    |24位

B类地址
10|网络号|主机号
16位    |16位

C类地址
110|网络号|主机号
24位      |8位

D类地址
1110|多播地址

举例：C类网络第一个可指派的网络号为192.0.1，最后一个可指派的网络号为223.255.255
ABC类的区分已成历史。当初分类是因为各网络差异很大，有些网络主机多，有些主机少，对IP地址进行划分可以满足不同用户的要求

IP分为网络号和主机号的好处
1.IP地址管理机构在分配IP地址时只分配网络号（第一级），剩下的主机号（第二级）由得到网络号的单位自行分配，方便了IP地址的管理
2.路由器仅根据目的主机的网络号进行转发，减少了路由表占用的空间，减少了查询时间

IP地址实际是标识一台主机（或路由）和一条链路的接口。若一台主机同时连接到两个网络上时，则必须拥有两个IP地址，网络号必须是不同的，这种称为多归属主机。由于路由器至少连接到两个网络，故路由器至少由两个不同ip

一个网络指具有相同网络号net-id主机的集合，因此用转发器或网桥连接起来的若干局域网仍是一个网络，因为这些局域网具有同样的网络号。不同网络号的局域网必须用路由器互联

物理地址是数据链路层和物理层使用的地址，IP地址是网络层和以上使用的地址，是逻辑地址，用软件实现
数据从主机H1经过R1、R2路由器到达主机H2，网络层看到的IP的源地址和目的地址始终不变。路由器进行路由选择时，只根据目的地址的IP地址的网络号进行选择
在链路层，只能看见MAC帧。MAC帧在不同网络上传送时，MAC帧首部中的源地址和目的地址会发生变化，IP层是看不到这种变化的

HA代表硬件地址
H1 （HA1 局域网 HA3） 路由器R1 （HA4 局域网 HA5） 路由器R2 （HA6 局域网 HA2） H2
        MAC帧首部地址
H1->R1  HA1 -> HA3
R1->R2  HA4 -> HA5
R2->H2  HA6 -> HA2

ARP协议
通过主机或路由器的IP地址，找到对应的硬件地址
每台主机都有一个ARP高速缓存，里面有本局域网上的各主机和路由器的IP->硬件地址的映射表
A主机向B主机发送IP数据，A先在ARP缓存查找B的IP地址，找不到时，ARP进程在本局域网上广播发送ARP请求分组，内容大概为：我的ip地址为xx，硬件地址为xx，我想知道ip为xx的主机的硬件地址。本局域网上所有主机的ARP进程都会收到此请求，由于B主机的主机与查询的IP地址一致，故发送ARP响应分组，内容大概为：我的ip是xx，硬件地址为xx。其他主机会忽视这个请求。A主机会缓存B的ip、mac映射关系，B主机也会缓存A主机的映射。缓存有生存时间（比如10-20分钟）
ARP是解决【同一个局域网】上的IP地址与硬件地址的映射问题。若不在同一个局域网，则由路由器转发，源主机把路由器的ip地址解析为硬件地址，以便把数据送到路由器；路由器从转发表找出下一跳路由器，使用ARP解析出硬件地址

总结出使用ARP的四种典型情况
发送方类型   源和目的是否在同一网络      行为
主机          是                       发送ARP请求分组，找到目的主机的硬件地址
主机          否                       发送ARP请求分组，找到同网络内的路由器的硬件地址，剩下的工作由路由器完成（下面2中情况）
路由器        是                       发送ARP请求分组，找到目的主机的硬件地址
路由器        否                       发送ARP请求分组，找到同网络内的另一个路由器R2的硬件地址，剩下的工作由R2完成

为什么有了MAC地址还需要IP地址
为了使各种异构网络能够通信，需要进行复杂的硬件地址转换工作，由用户或用户主机来完成几乎不可能。但使用IP地址可以把复杂的ARP过程隐藏，简单方便

IP数据报的格式
IP数据报=首部（固定20字节+可变部分）+数据。首部的字段如下：
版本，4位
首部长度，4位（长度可变，因为首部部分字段是可选的）
区分服务，8位，一般情况下不使用
总长度，16位，指首部+数据的总长度，单位字节，故数据报的最大长度为2的16次方-1=65535字节。（实际很少这么长）
标识，16位，每产生一个数据报，该标识位就+1。数据报分片（超过MTU）时，每个片段的标识都相同
标志，3位，目前只有两位有意义。中间位为DF（dont fragment，不能分片），为0时才允许分片；最低位为MF（more fragment），为1表示后面还有分片，为0表示这是分片中的最后一个
片偏移，13位，分片后，每个分片相对分片前的位置，可理解为偏移量
生存时间，8位，由发送方设置，防止无法交付的数据报无限循环（R1-R2-R3-R1）。开始单位为秒，若经过路由器的耗时时间小于1s，则TTL-1,；随着技术进步，路由器处理速度远小于1s，故把TTL的功能改为跳数限制（名称保持不变），路由器在转发数据报前把TTL-1，若减少到了0，则丢弃。若TTL=1，表示数据报只能在本局域网中传送
协议，8位，指出该数据报携带的数据是何种协议，这样上层就知道该如何处理。常用协议：ICMP,IGMP,TCP,UDP,IPv6
首部校验和，16位，只校验数据报的首部，不包括数据部分。校验结果出错则数据报舍弃

由于链路层都规定了MTU（最大传送单元），因此IP数据报的总厂（首部+数据）不能超过下层规定的MTU。比如以太网的MTU为1500字节。若超过，则需要分片处理
理论上，IP数据报越大，则首部占比越小，传输效率越高。但数据报越短，则路由转发的速度越快，因此IP协议规定，主机和路由器必须接收不超过576字节（上层交下来的数据512，首部60,富余4）的数据报

转发分组的流程
举例：网络1-R1-网络2-R2-网络3-R3-网络4。上述4个网络由3个路由器连接。若每个网络内有1w台主机，若路由表需要记录每台主机应怎样转发，则路由表有4w行记录。若路由表记录到某个网络该如何转发，则记录只有4条。以R2为例，若目的主机在网络2或者网络3，则R2可直接交付（通过ARP）；若目的主机在网络1，则下一跳路由器应为R1，由于R1和R2都连接在网络网络2，所以这种事情很容易做。互联网上进行转发分组时，可简化为由一个路由器转发到另一个路由器
在路由表中，每一条路由最重要的两个信息为：目的网络地址，下一跳地址。根据目的网络地址来确定下一跳路由器，可推测出：1.IP数据报一定可以找到目的主机所在目的网络上的路由器2.只有到达最后一个路由器时，才会像目的主机直接交付

所有的分组转发都是基于目的主机所在网络，但很多时候都允许特定目的主机指明一个路由，这种路由叫特定主机路由

当一个网络只有很少的对外连接时，采用默认路由可以减少路由表所占用的空间和搜索路由表所用的时间。举例：N2-R2-N1-R1-互联网，N为网络，则N1的路由表如下
目的网络    下一跳
N1          0.0.0.0
N2          R2
0.0.0.0     R1
其中0.0.0.0即为默认路由

有一个问题，IP数据报只记录了源IP和目标IP，没有下一跳路由器的IP，那如何找到下一跳路由器？
路由器收到IP数据报后，从路由表中得到下一跳路由器的IP地址后，不是把地址填入IP数据报，而是交给数据链路层的网络接口软件，接口软件把IP下一跳路由器的IP转为MAC地址（必须使用ARP），然后放入链路层的MAC帧的首部，根据MAC地址找到下一跳路由器。即不断重复以下过程：查找路由表->ARP得到硬件地址->写入MAC首部

综上，分组转发算法如下：
1.从数据报的首部提取出目的主机的IP地址D，得出目的网络地址为N
2.若路由器与N直连，则直接交付，否则执行3
3.若路由表中有目的地址为D的特定主机路由，则把数据传送给对应的下一跳路由器，否则执行4
4.若路由表中有到达网络N的路由，则把数据传送给对应的下一跳路由器，否则执行5
5.若路由表有默认路由，则交给默认路由，否则执行6
6.报错

划分子网
原先两级IP地址（网络号+主机号）有很多问题：为每一个物理网络分配一个网络号会使得路由表变得很大；新开通的网络必须申请IP地址才能连接到互联网，无法应对紧急情况，不灵活。为了解决上述问题，由增加了【子网号字段】，二级IP地址变成了三级IP地址，这种做法叫划分子网。思路如下：
1.一个拥有许多物理网络的单位，可将所属的物理网络划分为若干个子网。划分子网是单位内部的事，外部网络看不见该网络由多少子网组成，因此对外仍是一个网络
2.划分子网的方法是从主机号借用若干位作为子网号（主机号也相应减少同样的位数）。三级IP地址如下：网络号，子网号，主机号
3.其他网络发送给本单位某主机的IP数据报，仍然根据目的网络号找到路由器，但路由器收到IP数据报后，再按照目的网络号和子网号找到目的子网，把IP数据报交付目的主机
举例：某单位拥有B类IP地址，网络号为145.13，即凡是目的地址为145.13.x.x的数据报都会被送到这个网络的路由器R。现把该网络划分为3个子网，假设子网号占用8位，则主机号只剩8位。三个子网分别为：145.13.3.0，145.13.7.0，145.13.12.0。划分网络后，对外仍是一个网络，地址仍为145.13.0.0，但路由器R收到外部数据后，再根据目的地址转发到对应的子网

子网掩码
从IP数据报的首部无法知道目的主机连接的网络是否进行了子网划分，因此使用子网掩码（subnet mask）获取子网信息
二级IP地址                  145.13.3.10
二级IP地址的子网掩码         255.255.0.0
三级IP地址                  145.13.3.10
三级IP地址的子网掩码         255.255.255.0
子网的网络地址               145.13.3.0
现在子网号为3的网络的网络地址为145.13.3.0。路由器R为了方便从目的IP地址中提取子网的网络地址，使用三级IP地址的子网掩码。
使用子网掩码的好处：不管网络有没有划分子网，只要把子网掩码和IP地址进行与运算，即可得到网络地址
现在互联网标准规定：所有网络都必须使用子网掩码，同时路由表中也必须有子网掩码这一栏，若一个网络不划分子网，那么该网络的子网掩码就使用默认子网掩码。A类地址的默认子网掩码为255.0.0.0，以此类推
路由器在和相邻路由器交换路由信息时，必须把自己所在网络（或子网）的子网掩码告诉相邻路由器，路由表也要维护子网掩码。

使用子网时分组的转发
划分子网后，路由表必须包含：目的网络地址、子网掩码、下一跳地址，此时路由器转发分组的算法如下
1.从数据报的首部提取目的IP地址D
2.判断能否直接交付。对路由器直连的网络逐一检查：用各网络的子网掩码和D进行与运算，若结果==该网络的网络地址，则直接交付，否则执行3
3.若路由表中有目的地址为D的特定主机路由，则把数据传送给指明的下一跳路由器，否则执行4
4.对路由表中的每一行（目的网络地址，子网掩码，下一跳地址），用子网掩码&D，若结果==该行的目的网络地址，则把数据传送给该行的下一跳路由器，否则执行5
5.若路由表有默认路由，则交给默认路由，否则执行6
6.报错

无分类编址（CIDR，读作sider）
互联网面临这些问题：B类地址很快会分配完毕；互联网主干上的路由表的条数急剧增长；IPv4的控件终将耗尽。为了解决这些问题，研究了无分类编址，其特点如下
1.消除了ABC类地址及子网划分。把IP地址分为网络前缀和主机号，并采用斜线记法，即IP后面加上/前缀位数，比如128.14.35.7/20
2.把网络前缀相同的连续的IP地址组成一个CIDR地址块，只要知道CIDR地址块中的任何一个地址，就可以知道该地址块的起始地址（最小地址）和最大地址，及地址块中的地址数。把块当成集合更容易理解
举例：已知某CIDR地址块中的一个地址为128.14.35.7/20，则地址块的最小地址为128.14.32.0，最大地址为128.14.47.255。主机号全0或全1的特殊地址一般不用。该地址块共有2的12次方个地址（主机号一共12位）
用最小地址+网络前缀位数指明这个地址块。比如上面的地址块可记为128.14.32.0/20。在不需要指出地址块的起始地址时，也可把这样的地址块简称为【/20 地址块】

使用32位的地址掩码，虽然CIDR不使用子网，但由于部分网络还在使用子网划分和子网掩码，故CIDR的地址掩码也可称为子网掩码。有连续的1和连续的0组成，1的个数为网络前缀的长度。比如/20地址块的地址掩码为20个1+12个0
举例：地址192.199.170.82/27不仅表示IP地址为192.199.170.82，还表示网络前缀有27位，因此这个地址块包含32（2的5次方）个IP地址

CIDR不使用子网指不需要在32的ip地址中指定若干位为子网号。但是分配到了CIDR地址块的单位还是可以划分出子网，但这些子网的网络前缀比整个单位的网络前缀要长
举例：单位的网络前缀有20位，划分为8个子网（需要3位），则子网的网络前缀就变为23位。子网仍是由网络号+主机号组成（即没有子网号）

局域网网段地址：局域网通常会被分配一个特定的网段地址，比如192.168.1.0/24。其中192.168.1.0是网段地址，/24表示子网掩码为 255.255.255.0，网段地址可以作为局域网在网络中的一种"标识范围"
网关地址：局域网要与其他网络（如互联网）进行通信，需要通过网关设备（通常是路由器）。网关设备有一个连接到局域网的接口，这个接口会配置一个 IP 地址，作为局域网内设备访问外部网络的出口地址，也可以看作是局域网与外部网络通信的一个"代表"地址，局域网内的设备在访问外部网络时，数据包会先发送到这个网关地址，再由网关转发到外部网络

路由聚合
由于一个CIDR地址块有很多地址，因此路由表中就利用CIDR地址块来查找目的网络，这种地址的聚合称为路由聚合，使得路由表中的一行数据可以表示原来传统分类地址的多个路由，路由聚合也称为构成超网
举例：有4个子网：192.168.0.0/24，192.168.1.0/24，192.168.2.0/24，192.168.3.0/24，他们的前22位是相同的，可以把它们聚合成一个超网192.168.0.0/22，因此路由表中只需要一条记录，而非4条

最长前缀匹配
IP地址由网络前缀和主机号组成，因此路由表的字段也应改为网络前缀和下一跳地址，这会导致路由表可能会得到不止一个结果，这时选择网络前缀最长的路由。前缀越长，地址块越小，路由就越精准
举例：某路由表包含俩条记录：206.0.68.0/22和206.0.71.128/25（只展示前缀）若目的主机的地址为206.0.71.130，则把该ip和两条记录的掩码进行与运算，发现和网络前缀都一致，那么选择前缀长度为25的记录转发

通过这种方式，如果一开始就把整个世界划分为四大地区，每个地区分配一个CIDE地址块，就可大大减少路由表的记录数。但CIDR是后面推出的
欧洲194/7；北美198/7；中美和南美200/7；亚洲和太平洋202/7；

网际控制报文协议ICMP
ICMP允许主机或路由器报告差错情况，提供异常有关的报告，是互联网的标准协议，但不是高层协议，而是IP层的协议，ICMP报文是封装在IP数据报中，作为其中的数据部分
ICMP一个重要应用就是ping，是应用层直接使用网络层ICMP的一个例子，没有走传输层的TCP或UDP

专用地址
有些机构内部的计算机之间需要通信，但不需要都和互联网通信，这种内部使用的计算机可以由机构自行分配IP地址，但IP也不能完全任意分配，若分配的IP和互联网中的某IP一致，且该计算机能访问互联网，会出现地址二义性的问题。
因此，规定了一些专用地址，只能用于机构内部的通信，而不能用于和互联网上的主机通信；同时互联网中的所有路由器，对于目的地址是专用地址的数据报一律不转发。这些专用地址块包括：
10.0.0.0        -   10.255.255.255  又称24位块
172.16.0.0      -   172.31.255.255  又称20位块
192.168.0.0     -   192.168.255.255 又称16位块
采用这种专用IP地址的网络称为本地互联网或者专网

VPN
有些大机构的部门分散在世界各地，这些部门间要通信，可以利用公用的互联网作为机构各专网间的通信载体，这种专网又称为VPN

网络地址转换NAT
专网的某主机已经分配了专用地址，又想和互联网上的主机通信，可以使用NAT，需要在路由器上安装NAT软件，同时要求路由器至少有一个外网ip
专网的主机访问互联网上的主机时，路由器把专用地址转为路由器的互联网IP地址，再转发；互联网主机应答时，目的IP地址也是路由器的IP地址，然后通过NAT地址转换表，把目的IP地址转为专用地址。若路由器有n个公网ip，则专网最多有n台主机可以接入公网，即并发最多n。为了更高效地利用公网ip，NAT转换表把运输层的端口号也使用上，这种叫做NAPT，但很多文献并没有对这两者进行区分，而是都使用NAT
专网ip+端口 <--> 路由器公网ip+端口 <--> 目的地址+端口
普通路由器在转发时，源IP及目标IP都不变，但NAT路由器一定会改变源或目标IP；另外普通路由器工作在网络层，NAT路由器需要查看并转换端口号，这本是传输层的事情，没有遵守层次关系，遭人批评

========================运输层========================
网络层和运输层的区别
网络层为主机间提供逻辑通信；运输层为应用进程间提供端到端的逻辑通信
运输层对收到的报文进行差错检测；网络层只检查首部，不检查数据

运输层向高层用户屏蔽了下面网络核心的细节，使应用进程看起来好像两个运输层的实体间有一个逻辑通信通道

传输层的端口号分为下列
服务器端使用的端口号，分为熟知端口号（或系统端口号，0-1023）和登记端口号（1024-49151）
应用程序        FTP     TELNET      DNS
熟知端口号      21      23          53

客户端使用的端口号，数值为49152-65535，这类端口号仅在客户进程运行时动态选择，所以又叫短暂端口号

UDP
在IP的数据报服务的基础上增加了很少功能。UDP主要特点如下
1.UDP在传送数据前不需要建立连接，收到UDP请求后不需要回复确认
2.尽最大努力交付，不保证可靠交付
3.面向报文。发送方的UDP对应用程序交下来的报文，添加首部后就交付给IP层。应用层的报文，不合并，也不拆分，有多长都直接发送。同理，接收方的UDP，对IP层交上的UDP用户数据报，去除首部后原封不动地交付给应用。应用需要控制报文的大小，若太大，则IP层会进行分片；太小则影响效率
4.没有拥塞控制，网络出现拥塞时不会时源主机的发送速率降低，对于实时应用（比如视频会议）是很重要的
5.支持一对一，一对多，多对一，多对多的交互通信
6.首部开销小，8字节（TCP20字节）

TCP主要特点
1.TCP提供面向连接的服务，数据传送前建立连接，传送后释放连接
2.TCP连接只能有两个端点，即点对点，不提供广播或多播服务
3.提供可靠交付的服务，通过TCP连接传送的数据，无差错，不丢失，无重复，按序到达
4.提供全双工通信，允许通信双方在任何时候发送数据，连接的两端都有发送和接收缓存。发送时，应用把数据传送给TCP缓存后，TCP会在合适的时机发送；接受时，TCP把收到的数据放入缓存，应用在合适的时候读取缓存
5.面向字节流。TCP的流（stream）指的是流入到进程或从进程流出的字节序列。虽然应用和TCP交互是一次一个大小不等的数据块，但TCP把它看成一连串无结构的字节流，且无法理解其含义。TCP不保证接受和发送方的数据块有对应大小的关系，比如发送了10个数据块，但接收方用4个数据块就全部接收。接收方和发送方的字节流必须完全一样。TCP会根据窗口值和网络拥塞情况决定一个报文段包含多少字节，比如应用给TCP的缓存的数据块太长，则TCP将其划分短一些再发送；若应用指发来一个字节，则TCP也可以等待字节足够多后再发送

TCP的连接
TCP把链接作为最基本的抽象。TCP连接的端点不是IP不是端口，而是套接字或者插口。套接字=IP:端口

========================应用层========================
