
1.先写数据库再删缓存
适用场景：并发不大，一致性不高
缺点：极端情况不一致：缓存过期，A读db；B写db，删缓存；A写缓存
也称为cache-aside缓存旁路，包含
读流程：查缓存，命中则返回，不命中则查db，并更新缓存，返回结果
写流程：更新db，删缓存（懒加载）

为什么是删缓存而不是更新缓存？如果是更新缓存，则以下场景会导致不一致
A写数据库
B写数据库并更新缓存
A更新缓存
后续缓存中保存的都是A的旧数据，危害极大。如果是删缓存则不会有问题

为什么不能先删缓存再写数据库？
A删缓存
B读缓存，不存在，读db并更新缓存
A写数据库
后续缓存中保存的都是旧数据。且A的两个操作之间时间间隔比较大（缓存操作一般是毫秒级，db操作可能是几百毫秒），发生概率比较高

2.延迟双删
更新数据库
删缓存
1-2秒后删缓存
适用场景：对一致性要求高，并发高

第二次删除的原因
前一种方案极端情况会不一致，因此延迟一定时间（根据业务及经验）后再删除
