
哪一项工作对你的成长最有帮助，对你写代码或解决问题的能力有比较高的提升

你印象深刻的事情有什么

如何优化sql
先看explain，再根据type，key，key_length，row，extra再决定

为何要建立联合索引
索引覆盖；减少数据扫描范围；索引排序

索引下推是什么

mysql的锁了解吗

RR级别下，id={1，3，5} select where id = 4，加什么锁

临键锁哪边开哪边闭

update where id >=5 呢

市面上分库分表有哪些技术方案
sharding-jdbc

一致性hash是什么

有没有使用过mybatis拦截器

TCP的粘包和拆包有了解吗

TCP如何解决乱序问题
TCP为每一个字节分配一个序号，TCP首部的序号为第一个字节的序号。接收方维护一个接收缓冲区，并根据序号排序，有序的提交给应用层，无序的暂时保留。接收方通过ack告知发送方已经接收的最大的连续序号，发送方依此进行重传

消息出现积压，瓶颈不在数据库，可能在哪些地方
消息队列资源不足，分区数量不合理；消费者数量不足；代码需要优化；网络带宽不足

kafka分区数量和消费者组里的消费者数量为何保持一致

一个partition只能被一个消费者消费，为什么要这么设计
保证消息的顺序性

synchronized的用法
修饰实例方法时，锁对象是当前对象实例（this）。修饰静态方法时，锁对象是当前类的Class对象。修饰代码块，需显式指定锁对象。

volatile解决了什么问题
保证多线程环境下变量的可见性；避免指令重排序。但无法保证复合操作的原子性（比如i++，实际包含多个操作，volatile无法保证这么多操作为一个原子操作）

原子类的底层是什么原理
cas。基于硬件指令cmpxchg

aqs有了解吗，原理是什么

hashmap为何不是线程安全的？不安全体现在哪些方面？
1.多个线程同时put，key对应的到同一个下标，操作链表的最后一个节点。第一个插入后，第二个把第一个的值覆盖了，导致第一个元素丢失
2.扩容时，java7及之前可能导致链表出现环；java8可能导致数据丢失

HashMap中的红黑树是线程安全的吗
不是

什么是线程安全
多线程同时操作共享资源，结果符合预期。具体来说，看是否满足以下特性：1.原子性（i++不是） 2.可见性（比如volatile） 3.有序性（指令不会重排序）

100个线程同时把变量赋值为1，是否线程安全
安全。因为赋值这一操作是原子性，无歧义


