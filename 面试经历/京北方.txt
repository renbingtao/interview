介绍一下你最近的一个项目

你们做这个项目的周期是怎样的

你在这个项目里是什么角色

项目中是如何使用DDD的

你们项目使用到了微服务，这个微服务的搭建是怎么考量的

说下你们服务划分的思想

你们这个项目划分了多少个

有统一的接入层吗

说下zk+dubbo实现配置中心、注册中心的原理

zk集群是如何通信的
主节点处理写请求，执行成功后，让其他从节点执行，超过半数的执行成功时，返回成功

rabbitmq是如何保证消息的一致性的
队列分为主和从，生产消息和消费消息都是针对主节点，从节点仅仅作为备份

什么场景用到了kafka？除了你们用的场景，还有什么场景

redis实现了分布式缓存，用在了什么场景

会前端吗

mysql有哪些锁

乐观锁常用的场景
读多写少，并发度低的场景，比如商品信息
问题延展：乐观锁和悲观锁的区别是操作资源前是否会获取锁，乐观锁不会获取而是操作结束后检查是否被其他资源修改过，如果修改则放弃或重试。乐观锁是一种思想，一般通过CAS实现
获取资源失败，线程如果不阻塞，则需要自旋

mysql有哪些索引
b+树，哈希索引（基于hash表实现，innodb会自适应创建，不可手动干预），全文索引（倒排索引）

mysql索引失效的情况

你们的框架对spring做了什么改进

平时有没有对一些开源产品进行深入了解

你们小组是怎样的规模，多少人

你们迭代的周期是怎样的

版本无法按时上线，如何处理
