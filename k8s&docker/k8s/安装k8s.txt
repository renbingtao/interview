
================================= 所有节点安装containerd、k8s组件 =================================
安装docker的apt仓库
curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg
add-apt-repository -y "deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable"

# 安装containerd
apt-get update
apt-get install -y containerd.io docker-ce docker-ce-cli
systemctl restart docker
systemctl enable docker

# 配置containerd
containerd config default | tee /etc/containerd/config.toml >/dev/null 2>&1
sed -i 's/k8s.gcr.io/registry.cn-hangzhou.aliyuncs.com\/google_containers/g' /etc/containerd/config.toml
sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
sed -i 's#sandbox_image = ".*"#sandbox_image = "registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.8"#g' /etc/containerd/config.toml

systemctl restart containerd
systemctl enable containerd

安装kubeadm、kubelet、kubectl
apt-get install -y kubelet=1.25.10-00 kubeadm=1.25.10-00 kubectl=1.25.10-00

systemctl enable kubelet
systemctl start kubelet

================================= 部署master节点 =================================

docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver:v1.25.10
docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy:v1.25.10
docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager:v1.25.10
docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler:v1.25.10
docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:1.9.3
docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:3.5.6-0
docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.8
# 安装ingress controller
docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/nginx-ingress-controller:v1.4.0
docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-webhook-certgen:v1.5.1

kubeadm init --apiserver-advertise-address=172.24.223.101 --image-repository=registry.cn-hangzhou.aliyuncs.com/google_containers --service-cidr=10.96.0.0/12 --pod-network-cidr=10.244.0.0/16 --kubernetes-version=v1.25.10 --control-plane-endpoint=k8s-master

# 若执行失败，重新执行init时，需要先执行下面的步骤
# 清理残留旧组件
rm /etc/kubernetes/manifests/*.yaml
rm -rf /var/lib/etcd/*
# 停止kubelet，否则会端口占用
systemctl stop kubelet

执行成功后，按提示执行
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
如果是root用户，可以执行
export KUBECONFIG=/etc/kubernetes/admin.conf

mkdir /k8s-install
chmod -R 777 /k8s-install
cd /k8s-install
将kube-flannel.yml上传至/k8s-install，执行
kubectl apply -f kube-flannel.yml
如果希望回滚这个配置，则执行
kubectl delete -f kube-flannel.yml

systemctl restart containerd

记录管理台输出的kubeadm join命令。如果清除了，可以再次生成
kubeadm token create --print-join-command

安装ingress controller
上传deploy.yaml
kubectl apply -f deploy.yaml
执行后，ingress-nginx-admission-create和ingress-nginx-admission-patch的状态会变成Completed，这是一次性任务，属于正常

部署Ingress
apply myIngress.yaml
kubectl get ingress 查看域名及ip端口：springboot.example.com   10.110.238.113   80
3个节点更新/etc/hosts 新增以下内容
10.110.238.113  springboot.example.com
验证
curl springboot.example.com/student/get

================================= node节点加入 =================================

对node1和node2执行
kubeadm join 172.24.223.101:6443 --token pzqmlo.bj3sp7ian92p5kl9 --discovery-token-ca-cert-hash sha256:1831261e6b1219321106b02f9102d884bd9847b5591fce1afc80535e51049c26

在master查看
kubectl get nodes
如果状态是NotReady，稍等一会，flannel正在创建网络。等待状态变为Ready
