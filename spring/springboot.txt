
springboot不需要独立的容器也能运行，因为内嵌了各种servlet容器如tomcat，不再需要打成war包，只需要打成jar包就能独立运行

springboot的核心注解是哪个
启动类上面的注解是@SpringBootApplication，它也是 Spring Boot的核心注解，它包含下列注解
@SpringBootConfiguration：继承自 @Configuration 注解，用于标记当前类是一个配置类
@EnableAutoConfiguration：自动配置的核心注解
@ComponentScan

spring自动装配的原理
核心是@EnableAutoConfiguration，里面包含了两个注解：
1.@AutoConfigurationPackage
这个注解的作用说白了就是将主配置类（@SpringBootApplication标注的类）所在包以及子包里面的所有组件扫描并加载到spring的容器中，这也就是为什么我们在利用springboot进行开发的时候，无论是Controller还是Service的路径都是与主配置类同级或者次级的原因
2.@Import（AutoConfigurationImportSelector.class）
其中AutoConfigurationImportSelector实现了ImportSelector接口的selectImports方法，该方法一路调用下来，最终会查找所有在META-INF路径下的spring.factories文件，这些文件是k=v的形式，找到key=EnableAutoConfiguration的value（一个list）并返回，这些就是自动装配的配置类

如何理解starter
启动器，一站式解决依赖集合。传统的spring开发中，引入某个功能时，需要手动添加依赖并手动解决版本兼容问题，而使用starter只用添加一个starter依赖即可解决依赖及版本的问题
springboot的官方启动器都是以spring-boot-starter-命名的。要构建一个简单的 Web 应用，添加spring-boot-starter-web依赖即可

springboot配置加载顺序，上面的被下面的覆盖
@PropertySource注解指定的文件
application.yml
application.properties
操作系统环境变量
Java系统属性（System.getProperties()）
命令行参数
例：命令行和yml配置冲突，命令行的优先级更高

为何springboot的jar可以直接运行
springboot提供了插件spring-boot-maven-pulgin插件用于打成jar包
打出来的是Fat jar，包含各种jar包
java -jar会读取manifest文件中的main class（这是jvm的规范）的启动类JarLauncher，读取jar包并启动manifest中的start-class类

如何自定义一个starter
新建一个MyStarter工程，加入一个@Configuration类，声明各种bean。一般还要和@ConditionalOnXXX配合使用
在src/main/resources下的META-INF/spring目录下，新建org.springframework.boot.autoconfigure.AutoConfiguration.imports配置文件，内容为Configuration类的全路径
其他工程引入stater即可。上述是基于springboot 3实现的；2.7之前则配置文件为spring.factories；2.7-3.0两种都支持
